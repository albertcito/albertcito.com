(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{123:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var a=r(0),n=r.n(a);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=n.a.createContext({}),s=function(e){var t=n.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return r?n.a.createElement(d,l(l({ref:t},p),{},{components:r})):n.a.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},125:function(e,t,r){"use strict";var a=r(0),n=r.n(a);t.a=({src:e,alt:t,title:r})=>n.a.createElement("div",{className:"imageContainer"},n.a.createElement("div",{className:"center"},n.a.createElement("img",{src:e,alt:t})),n.a.createElement("div",{className:"center"},r))},84:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return u}));var a=r(3),n=r(7),o=(r(0),r(123)),i=r(125),l={slug:"public-private-schema-with-apollo-server-express",title:"Public and private schema with Apollo Server and Express",tags:["apollo-server","expressjs","error 401","typescript","exception"],image:"https://albertcito.com/img/blog/auth-graphql.png"},c={permalink:"/blog/public-private-schema-with-apollo-server-express",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/blog/blog/2020-10-8-public-private-schema-with-apollo-server-express.mdx",source:"@site/blog/2020-10-8-public-private-schema-with-apollo-server-express.mdx",description:"(you can read a better solution here)",date:"2020-10-08T04:00:00.000Z",tags:[{label:"apollo-server",permalink:"/blog/tags/apollo-server"},{label:"expressjs",permalink:"/blog/tags/expressjs"},{label:"error 401",permalink:"/blog/tags/error-401"},{label:"typescript",permalink:"/blog/tags/typescript"},{label:"exception",permalink:"/blog/tags/exception"}],title:"Public and private schema with Apollo Server and Express",readingTime:2.08,truncated:!0,prevItem:{title:"Package to use decorators with validatorJS",permalink:"/blog/package-decorators-validatorjs"},nextItem:{title:"Handle failed server requests with a custom exception in TypeScript",permalink:"/blog/handle-failed-server-requests-with-custom-exception-typescript"}},p=[],s={toc:p};function u(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"(you can read a better solution ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/blog/private-queries-with-apollo-server-express"}),"here"),")"),Object(o.b)("p",null,"The GraphQL Spec that defines ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://spec.graphql.org/draft/#sec-Errors"}),"how errors should be handled"),". That means Apollo Server cannot send 401 server error, each request sent http status 200. Even if you have an authenticate issue, it  will return a JSON with http status 200. My plan to handle it is to create two shemas, one private and one public."),Object(o.b)(i.a,{src:"/img/blog/auth-graphql.png",alt:"Apollo Server query with authenticate user",title:"Apollo Server query with authenticate user",mdxType:"Image"}))}u.isMDXComponent=!0}}]);