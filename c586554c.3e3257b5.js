(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{102:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return b}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),c=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),h=n,b=u["".concat(i,".").concat(h)]||u[h]||m[h]||o;return r?a.a.createElement(b,s(s({ref:t},p),{},{components:r})):a.a.createElement(b,s({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},104:function(e,t,r){"use strict";var n=r(0),a=r.n(n);t.a=({src:e,alt:t,title:r})=>a.a.createElement("div",{className:"imageContainer"},a.a.createElement("div",{className:"center"},a.a.createElement("img",{src:e,alt:t})),a.a.createElement("div",{className:"center"},r))},90:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return p})),r.d(t,"default",(function(){return u}));var n=r(2),a=r(6),o=(r(0),r(102)),i=r(104),s={slug:"private-queries-with-apollo-server-express",title:"Private queries with Apollo Server and Express",tags:["apollo-server","expressjs","error 401","typescript","exception"],image:"https://albertcito.com/img/blog/auth-graphql.png"},l={permalink:"/blog/private-queries-with-apollo-server-express",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/blog/blog/2020-10-8-private-queries-with-apollo-server-express.mdx",source:"@site/blog/2020-10-8-private-queries-with-apollo-server-express.mdx",description:"The GraphQL Spec that defines how errors should be handled. That means Apollo Server cannot send 401 server error, each request sent http status 200. Even if you have an authenticate issue, it  will return a JSON with http status 200. My plan to handle it is to create two shemas, one private and one public.",date:"2020-10-08T04:00:00.000Z",tags:[{label:"apollo-server",permalink:"/blog/tags/apollo-server"},{label:"expressjs",permalink:"/blog/tags/expressjs"},{label:"error 401",permalink:"/blog/tags/error-401"},{label:"typescript",permalink:"/blog/tags/typescript"},{label:"exception",permalink:"/blog/tags/exception"}],title:"Private queries with Apollo Server and Express",readingTime:2.045,truncated:!0,nextItem:{title:"Handle failed server requests with a custom exception in TypeScript",permalink:"/blog/handle-failed-server-requests-with-custom-exception-typescript"}},p=[],c={rightToc:p};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The GraphQL Spec that defines ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://spec.graphql.org/draft/#sec-Errors"}),"how errors should be handled"),". That means Apollo Server cannot send 401 server error, each request sent http status 200. Even if you have an authenticate issue, it  will return a JSON with http status 200. My plan to handle it is to create two shemas, one private and one public."),Object(o.b)(i.a,{src:"/img/blog/auth-graphql.png",alt:"Apollo Server query with authenticate user",title:"Apollo Server query with authenticate user",mdxType:"Image"}))}u.isMDXComponent=!0}}]);